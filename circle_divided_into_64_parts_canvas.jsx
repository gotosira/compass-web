import React, { useEffect, useRef, useState } from "react";

/**
 * FIX: The previous canvas contained Dart (Flutter) code inside a TSX file, which the
 * TypeScript/React runner tried to parse and raised a syntax error. This rewrite restores
 * a valid React+TSX implementation that runs in-browser and behaves like a real compass.
 *
 * What you get:
 * - Full‚Äëscreen, responsive compass dial that ROTATES with device heading.
 * - 0¬∞ is North (top). A fixed top index marker shows your facing direction.
 * - 64 slices, 2‚Äëdecimal degree labels around the rim, bold border every 8 slices.
 * - Cardinal letters (N, E, S, W) always visible.
 * - iOS permission flow ("Enable compass" button) + graceful fallbacks.
 * - Lightweight runtime tests via console.assert (tiling, degrees formatting, etc.).
 */

export default function App() {
  const canvasRef = useRef(null);

  // Geometry (fixed for compass mode)
  const SEGMENTS = 64;
  // Old fixed values made mobile cramped; compute responsive geometry during draw
  const PADDING = 110;
  const INNER_R = 160;

  // Responsive canvas size
  const [size, setSize] = useState(800);

  // Heading in degrees (0..360), 0 = North
  const [heading, setHeading] = useState(0);
  const [sensorStatus, setSensorStatus] = useState("idle");
  const [showBig, setShowBig] = useState(false);
  const [showSmall, setShowSmall] = useState(false);
  const [currentBig, setCurrentBig] = useState(null);
  const [currentSmall, setCurrentSmall] = useState(null);
  const [showAspects, setShowAspects] = useState(false);
  const [userName, setUserName] = useState("");
  const [birthNum, setBirthNum] = useState(null); // 1..7
  const [showIntro, setShowIntro] = useState(false);
  const [theme, setTheme] = useState("noon");
  const [lat, setLat] = useState(null);
  const [lon, setLon] = useState(null);
  const [altitudeM, setAltitudeM] = useState(null);
  const [place, setPlace] = useState("");
  const [geoStatus, setGeoStatus] = useState("idle");

  // ---------- lightweight tests (act like smoke tests) ----------
  useEffect(() => {
    const step = 360 / SEGMENTS;
    console.assert(Math.abs(step * SEGMENTS - 360) < 1e-9, "Segments must tile to 360¬∞");
    console.assert(Math.abs(step - 5.625) < 1e-9, "64 segments should be 5.625¬∞ each");
    const sample = (3 * step).toFixed(2);
    console.assert(/^\d+\.\d{2}$/.test(sample), "Degree labels should have 2 decimals");
  }, []);

  // Fit canvas to the smaller viewport dimension
  useEffect(() => {
    const update = () => {
      const m = Math.min(window.innerWidth, window.innerHeight);
      // keep a small margin so outer labels aren't cut off
      setSize(Math.max(320, Math.min(1600, Math.floor(m - 16))));
    };
    update();
    window.addEventListener("resize", update);
    return () => window.removeEventListener("resize", update);
  }, []);

  // Device Orientation ‚Üí heading
  useEffect(() => {
    const needPerm =
      typeof DeviceOrientationEvent !== "undefined" &&
      typeof DeviceOrientationEvent.requestPermission === "function";

    if (needPerm) {
      setSensorStatus("need-permission");
    } else {
      const ok = startSensors();
      setSensorStatus(ok ? "active" : "unavailable");
    }

    return stopSensors; // cleanup on unmount
  }, []);

  const listeners = [];
  const targetHeadingRef = useRef(0);
  const headingRef = useRef(0);
  const rafRef = useRef(0);
  const preferWebkitRef = useRef(false);
  const [offsetDeg, setOffsetDeg] = useState(() => {
    const v = Number(localStorage.getItem("compassOffsetDeg") || "0");
    return Number.isFinite(v) ? v : 0;
  });
  useEffect(() => {
    try { localStorage.setItem("compassOffsetDeg", String(offsetDeg)); } catch {}
  }, [offsetDeg]);

  function isIOS() {
    const ua = navigator.userAgent || "";
    const iPadOS = navigator.platform === "MacIntel" && navigator.maxTouchPoints > 1;
    return /iP(hone|ad|od)/.test(ua) || iPadOS;
  }

  function wrapText(ctx, text, maxWidth) {
    const words = String(text).split(/\s+/);
    const lines = [];
    let current = "";
    for (const w of words) {
      const test = current ? current + " " + w : w;
      const wWidth = ctx.measureText(test).width;
      if (wWidth <= maxWidth) {
        current = test;
      } else {
        if (current) lines.push(current);
        current = w;
      }
    }
    if (current) lines.push(current);
    return lines.slice(0, 6); // cap lines for box height
  }

  function birthDayName(n) {
    const m = {
      1: "‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå",
      2: "‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå",
      3: "‡∏≠‡∏±‡∏á‡∏Ñ‡∏≤‡∏£",
      4: "‡∏û‡∏∏‡∏ò",
      5: "‡∏û‡∏§‡∏´‡∏±‡∏™‡∏ö‡∏î‡∏µ",
      6: "‡∏®‡∏∏‡∏Å‡∏£‡πå",
      7: "‡πÄ‡∏™‡∏≤‡∏£‡πå",
    };
    return m[n] || "";
  }

  // Themes for noon, dark, and red night mode
  const THEMES = {
    noon: {
      page: "#ffffff",
      bg: "#ffffff",
      text: "#0f172a",
      major: "#0f172a",
      minor: "rgba(15,23,42,.2)",
      tickMaj: "rgba(15,23,42,.53)",
      tickMin: "rgba(15,23,42,.27)",
      sub: "#64748b",
      accent: "#111827",
      outline: "#10b981",
      topbarBg: "rgba(255,255,255,.85)",
      topbarBorder: "#e2e8f0",
      muted: "#334155",
      overlayBg: "rgba(255,255,255,0.95)",
      overlayBorder: "#e2e8f0",
      buttonBg: "#0f172a",
      buttonText: "#ffffff",
      trackBg: "rgba(255,255,255,0.9)",
    },
    dark: {
      page: "#0b1220",
      bg: "#0b1220",
      text: "#e5e7eb",
      major: "#e5e7eb",
      minor: "rgba(229,231,235,.2)",
      tickMaj: "rgba(229,231,235,.55)",
      tickMin: "rgba(229,231,235,.3)",
      sub: "#94a3b8",
      accent: "#f1f5f9",
      outline: "#22c55e",
      topbarBg: "rgba(15,23,42,.7)",
      topbarBorder: "#1f2937",
      muted: "#cbd5e1",
      overlayBg: "rgba(15,23,42,0.9)",
      overlayBorder: "#1f2937",
      buttonBg: "#e5e7eb",
      buttonText: "#0b1220",
      trackBg: "rgba(15,23,42,0.6)",
    },
    red: {
      page: "#000000",
      bg: "#000000",
      text: "#ff584a",
      major: "#ff584a",
      minor: "rgba(255,88,74,.25)",
      tickMaj: "rgba(255,88,74,.6)",
      tickMin: "rgba(255,88,74,.3)",
      sub: "rgba(255,88,74,.6)",
      accent: "#ff584a",
      outline: "#ff584a",
      topbarBg: "rgba(0,0,0,.7)",
      topbarBorder: "#222",
      muted: "#ff9a90",
      overlayBg: "rgba(0,0,0,0.9)",
      overlayBorder: "#222",
      buttonBg: "#ff584a",
      buttonText: "#000000",
      trackBg: "rgba(0,0,0,0.6)",
    },
    watch: {
      page: "#000000",
      bg: "#000000",
      text: "#F9FAFB",
      major: "#F9FAFB",
      minor: "rgba(249,250,251,.18)",
      tickMaj: "rgba(249,250,251,.6)",
      tickMin: "rgba(249,250,251,.28)",
      sub: "#94a3b8",
      accent: "#00ff7f",
      outline: "#00ff7f",
      topbarBg: "rgba(0,0,0,.75)",
      topbarBorder: "#1a1a1a",
      muted: "#cbd5e1",
      overlayBg: "rgba(0,0,0,0.9)",
      overlayBorder: "#1a1a1a",
      buttonBg: "#22c55e",
      buttonText: "#000000",
      trackBg: "rgba(0,0,0,0.6)",
    },
  };
  const t = THEMES[theme] || THEMES.noon;

  // Intro bootstrap from localStorage; don't show modal until sensors active
  useEffect(() => {
    try {
      const n = localStorage.getItem("userName") || "";
      const b = Number(localStorage.getItem("birthNum") || "");
      if (n) setUserName(n);
      if (Number.isFinite(b) && b >= 1 && b <= 7) setBirthNum(b);
    } catch {}
  }, []);

  useEffect(() => {
    if (sensorStatus === "active") {
      if (!userName || !birthNum) setShowIntro(true);
    }
  }, [sensorStatus]);

  function inferContextAndMood(text) {
    const t = String(text || "");
    const has = (arr) => arr.some((w) => t.includes(w));
    let icon = "üß≠";
    let label = "‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ";
    if (has(["‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å", "‡∏Ñ‡∏π‡πà", "‡πÅ‡∏ï‡πà‡∏á‡∏á‡∏≤‡∏ô", "‡∏ä‡∏π‡πâ‡∏™‡∏≤‡∏ß", "‡∏Ñ‡∏π‡πà‡∏Ñ‡∏£‡∏≠‡∏á", "‡∏Ñ‡∏ô‡∏£‡∏±‡∏Å", "‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß"])) {
      icon = "‚ù§Ô∏è"; label = "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å";
    } else if (has(["‡∏Ñ‡∏î‡∏µ", "‡∏ü‡πâ‡∏≠‡∏á", "‡∏Å‡∏é‡∏´‡∏°‡∏≤‡∏¢", "‡∏®‡∏≤‡∏•"])) {
      icon = "‚öñÔ∏è"; label = "‡∏Ñ‡∏î‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°";
    } else if (has(["‡∏á‡∏≤‡∏ô", "‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á", "‡∏ß‡πà‡∏≤‡∏à‡πâ‡∏≤‡∏á", "‡∏™‡∏±‡∏ç‡∏ç‡∏≤", "‡∏´‡∏∏‡πâ‡∏ô‡∏™‡πà‡∏ß‡∏ô", "‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£", "‡∏£‡∏≤‡∏ä‡∏Å‡∏≤‡∏£"])) {
      icon = "üíº"; label = "‡∏á‡∏≤‡∏ô";
    } else if (has(["‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå", "‡πÄ‡∏á‡∏¥‡∏ô", "‡∏°‡∏£‡∏î‡∏Å", "‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô", "‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏¥‡∏ô", "‡∏≠‡∏≤‡∏°‡∏¥‡∏™", "‡∏™‡∏¥‡∏ô‡∏à‡πâ‡∏≤‡∏á"])) {
      icon = "üí∞"; label = "‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô";
    } else if (has(["‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á", "‡πÇ‡∏¢‡∏Å‡∏¢‡πâ‡∏≤‡∏¢", "‡∏ï‡πà‡∏≤‡∏á‡πÅ‡∏î‡∏ô", "‡∏ñ‡∏¥‡πà‡∏ô‡∏ê‡∏≤‡∏ô"])) {
      icon = "‚úàÔ∏è"; label = "‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á/‡πÇ‡∏¢‡∏Å‡∏¢‡πâ‡∏≤‡∏¢";
    } else if (has(["‡πÄ‡∏à‡πá‡∏ö‡∏õ‡πà‡∏ß‡∏¢", "‡πÇ‡∏£‡∏Ñ", "‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û", "‡πÑ‡∏Ç‡πâ", "‡∏´‡∏±‡∏ß‡πÉ‡∏à"])) {
      icon = "ü©∫"; label = "‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û";
    } else if (has(["‡∏Ç‡∏±‡∏î‡πÅ‡∏¢‡πâ‡∏á", "‡∏®‡∏±‡∏ï‡∏£‡∏π", "‡∏Å‡∏µ‡∏î‡∏Å‡∏±‡∏ô", "‡∏≠‡∏≤‡∏Ü‡∏≤‡∏ï", "‡πÅ‡∏ï‡∏Å‡πÅ‡∏¢‡∏Å", "‡πÉ‡∏™‡πà‡∏Ñ‡∏ß‡∏≤‡∏°"])) {
      icon = "‚ö†Ô∏è"; label = "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏±‡∏î‡πÅ‡∏¢‡πâ‡∏á";
    } else if (has(["‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠", "‡∏≠‡∏∏‡∏õ‡∏ñ‡∏±‡∏°‡∏†‡πå", "‡∏Ñ‡πâ‡∏≥‡∏à‡∏∏‡∏ô", "‡∏õ‡∏Å‡∏õ‡πâ‡∏≠‡∏á", "‡∏≠‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡∏∞"])) {
      icon = "ü§ù"; label = "‡∏Å‡∏≤‡∏£‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠";
    }

    const goodWords = ["‡πÇ‡∏≠‡∏Å‡∏≤‡∏™", "‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", "‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠", "‡∏≠‡∏∏‡∏õ‡∏ñ‡∏±‡∏°‡∏†‡πå", "‡∏•‡∏≤‡∏†", "‡∏¢‡∏Å‡∏¢‡πà‡∏≠‡∏á", "‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥", "‡∏°‡∏£‡∏î‡∏Å", "‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï", "‡πÑ‡∏î‡πâ‡∏á‡∏≤‡∏ô", "‡πÑ‡∏î‡πâ‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå", "‡∏™‡∏°‡∏õ‡∏£‡∏≤‡∏£‡∏ñ‡∏ô‡∏≤", "‡∏û‡∏ö‡πÄ‡∏à‡∏≠‡∏Ñ‡∏ô‡∏ñ‡∏π‡∏Å‡πÉ‡∏à"];
    const badWords = ["‡∏õ‡∏±‡∏ç‡∏´‡∏≤", "‡∏Ç‡∏±‡∏î‡πÅ‡∏¢‡πâ‡∏á", "‡∏®‡∏±‡∏ï‡∏£‡∏π", "‡∏ü‡πâ‡∏≠‡∏á", "‡∏Ñ‡∏î‡∏µ", "‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏", "‡∏™‡∏π‡∏ç‡πÄ‡∏™‡∏µ‡∏¢", "‡πÄ‡∏à‡πá‡∏ö‡∏õ‡πà‡∏ß‡∏¢", "‡∏≠‡∏¥‡∏à‡∏â‡∏≤", "‡πÉ‡∏™‡πà‡∏Ñ‡∏ß‡∏≤‡∏°", "‡∏¢‡∏∂‡∏î", "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å", "‡∏•‡∏±‡∏Å", "‡∏Ç‡πÇ‡∏°‡∏¢", "‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", "‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò", "‡∏´‡∏ô‡∏µ‡πâ", "‡∏Ñ‡πâ‡∏≥‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô", "‡∏£‡∏∏‡∏ô‡πÅ‡∏£‡∏á", "‡πÅ‡∏ï‡∏Å‡∏´‡∏±‡∏Å", "‡∏Å‡∏•‡∏±‡πà‡∏ô‡πÅ‡∏Å‡∏•‡πâ‡∏á", "‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á"];
    const goodScore = goodWords.reduce((s, w) => s + (t.includes(w) ? 1 : 0), 0);
    const badScore = badWords.reduce((s, w) => s + (t.includes(w) ? 1 : 0), 0);
    let mood = "neutral";
    let moodIcon = "";
    if (goodScore > badScore) { mood = "good"; moodIcon = "üëç"; }
    else if (badScore > goodScore) { mood = "bad"; moodIcon = "üëé"; }
    return { icon, label, mood, moodIcon };
  }

  // --- Geolocation & reverse geocoding ---
  useEffect(() => {
    if (!navigator.geolocation) {
      setGeoStatus("error");
      return;
    }
    setGeoStatus("active");
    const onPos = (pos) => {
      const { latitude, longitude, altitude } = pos.coords || {};
      if (typeof latitude === "number" && typeof longitude === "number") {
        setLat(latitude);
        setLon(longitude);
      }
      if (typeof altitude === "number") setAltitudeM(Math.round(altitude));
    };
    const onErr = () => setGeoStatus("error");
    const id = navigator.geolocation.watchPosition(onPos, onErr, {
      enableHighAccuracy: true,
      maximumAge: 5000,
      timeout: 15000,
    });
    return () => navigator.geolocation.clearWatch(id);
  }, []);

  useEffect(() => {
    const fetchPlace = async () => {
      if (lat == null || lon == null) return;
      try {
        const url = `https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${lat}&longitude=${lon}&localityLanguage=th`;
        const r = await fetch(url);
        const j = await r.json();
        const parts = [j.locality || j.city || j.localityInfo?.administrative?.[0]?.name, j.principalSubdivision, j.countryName].filter(Boolean);
        setPlace(parts.join(", "));
      } catch {}
    };
    fetchPlace();
  }, [lat, lon]);

  useEffect(() => {
    const fetchAlt = async () => {
      if (lat == null || lon == null || altitudeM != null) return;
      try {
        const r = await fetch(`https://api.open-meteo.com/v1/elevation?latitude=${lat}&longitude=${lon}`);
        const j = await r.json();
        if (Array.isArray(j.elevation) && typeof j.elevation[0] === "number") {
          setAltitudeM(Math.round(j.elevation[0]));
        }
      } catch {}
    };
    fetchAlt();
  }, [lat, lon, altitudeM]);

  function formatLatLon(lat, lon) {
    const n = lat >= 0 ? "N" : "S";
    const e = lon >= 0 ? "E" : "W";
    return `LAT: ${Math.abs(lat).toFixed(6)} ${n}   LNG: ${Math.abs(lon).toFixed(6)} ${e}`;
  }

  useEffect(() => {
    headingRef.current = heading;
  }, [heading]);

  function normalize(deg) {
    if (typeof deg !== "number" || Number.isNaN(deg)) return null;
    let d = deg % 360;
    if (d < 0) d += 360;
    return d;
  }

  // Compute a tilt-compensated heading from alpha/beta/gamma when webkit heading is not available.
  function computeHeadingFromEuler(ev) {
    if (
      typeof ev?.alpha !== "number" ||
      typeof ev?.beta !== "number" ||
      typeof ev?.gamma !== "number" ||
      !Number.isFinite(ev.alpha) ||
      !Number.isFinite(ev.beta) ||
      !Number.isFinite(ev.gamma)
    ) {
      return null;
    }
    const degtorad = Math.PI / 180;
    const _z = ev.alpha * degtorad; // yaw
    const _x = ev.beta * degtorad; // pitch
    const _y = ev.gamma * degtorad; // roll

    const cX = Math.cos(_x);
    const cY = Math.cos(_y);
    const cZ = Math.cos(_z);
    const sX = Math.sin(_x);
    const sY = Math.sin(_y);
    const sZ = Math.sin(_z);

    // Calculate Vx and Vy components
    const Vx = -cZ * sY - sZ * sX * cY;
    const Vy = -sZ * sY + cZ * sX * cY;

    let heading = Math.atan2(Vx, Vy);
    if (heading < 0) heading += Math.PI * 2;
    const headingDeg = heading * (180 / Math.PI);
    return headingDeg;
  }

  function startSensors() {
    try {
      const handler = (ev) => {
        let hdg = null;
        const hasWebkit = typeof ev?.webkitCompassHeading === "number" && Number.isFinite(ev.webkitCompassHeading);
        if (isIOS()) {
          if (hasWebkit) {
            hdg = ev.webkitCompassHeading;
            preferWebkitRef.current = true;
          } else {
            // On iOS ignore non-webkit readings to avoid wrong offsets
            return;
          }
        } else {
          if (hasWebkit) {
            hdg = ev.webkitCompassHeading;
          } else if (typeof ev?.alpha === "number" && Number.isFinite(ev.alpha)) {
            const compensated = computeHeadingFromEuler(ev);
            hdg = compensated !== null ? compensated : 360 - ev.alpha;
          }
        }
        const n = normalize(hdg);
        if (n !== null) targetHeadingRef.current = n;
      };
      window.addEventListener("deviceorientationabsolute", handler, true);
      window.addEventListener("deviceorientation", handler, true);
      listeners.push(["deviceorientationabsolute", handler]);
      listeners.push(["deviceorientation", handler]);
      return true;
    } catch (e) {
      console.warn("startSensors failed", e);
      return false;
    }
  }

  function stopSensors() {
    for (const [t, fn] of listeners) {
      try {
        window.removeEventListener(t, fn, true);
      } catch {}
    }
    listeners.length = 0;
  }

  async function onEnable() {
    try {
      const needsOrientationPerm =
        typeof DeviceOrientationEvent !== "undefined" &&
        typeof DeviceOrientationEvent.requestPermission === "function";

      const needsMotionPerm =
        typeof DeviceMotionEvent !== "undefined" &&
        typeof DeviceMotionEvent.requestPermission === "function";

      if (needsOrientationPerm) {
        try {
          const resp = await DeviceOrientationEvent.requestPermission();
          if (resp !== "granted") {
            setSensorStatus("unavailable");
            return;
          }
        } catch (e) {
          console.warn("Orientation permission failed", e);
          setSensorStatus("error");
          return;
        }
      }

      if (needsMotionPerm) {
        try {
          await DeviceMotionEvent.requestPermission().catch(() => {});
        } catch {}
      }

      // On iOS 13+, request absolute orientation if supported
      try {
        if (typeof window.DeviceOrientationEvent !== "undefined" && typeof window.DeviceOrientationEvent.requestPermission !== "function") {
          // Some browsers expose deviceorientationabsolute separately; add a one-time listener to detect availability
          window.addEventListener("deviceorientationabsolute", (ev) => {
            if (typeof ev?.webkitCompassHeading === "number") {
              preferWebkitRef.current = true;
            }
          }, { once: true, passive: true });
        }
      } catch {}

      const ok = startSensors();
      setSensorStatus(ok ? "active" : "unavailable");
    } catch (e) {
      console.warn("Permission request failed", e);
      setSensorStatus("error");
    }
  }

  // --- heading smoothing (improves readability on mobile) ---
  function shortestAngleDelta(from, to) {
    let diff = (to - from) % 360;
    if (diff < -180) diff += 360;
    if (diff > 180) diff -= 360;
    return diff;
  }

  useEffect(() => {
    const animate = () => {
      const current = headingRef.current;
      const target = normalize(targetHeadingRef.current + offsetDeg) ?? 0;
      const diff = shortestAngleDelta(current, target);
      const smoothing = 0.15; // 0..1, higher = faster
      const next = normalize(current + diff * smoothing);
      if (next !== null && Math.abs(diff) > 0.05) {
        setHeading(next);
      } else if (next !== null && Math.abs(diff) > 0) {
        // snap when close
        setHeading(target);
      }
      rafRef.current = requestAnimationFrame(animate);
    };
    rafRef.current = requestAnimationFrame(animate);
    return () => cancelAnimationFrame(rafRef.current);
  }, []);

  function dir16(deg) {
    const names = [
      "N", "NNE", "NE", "ENE",
      "E", "ESE", "SE", "SSE",
      "S", "SSW", "SW", "WSW",
      "W", "WNW", "NW", "NNW",
    ];
    const idx = Math.round(((deg % 360) / 22.5)) % 16;
    return names[idx];
  }

  // ‡∏ï‡∏≥‡∏£‡∏≤‡πÄ‡∏™‡∏ß‡∏¢/‡πÅ‡∏ó‡∏£‡∏Å
  const MEANINGS = {
    "1-1": `‡∏à‡∏∞‡πÄ‡∏Å‡∏¥‡∏î‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ß‡∏ô‡∏Å‡∏£‡∏∞‡∏ß‡∏≤‡∏¢‡∏£‡πâ‡∏≠‡∏ô ‡∏≠‡∏î‡∏ó‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏î‡∏¥‡∏°‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ ‡∏à‡∏∞‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ô‡∏£‡∏≠‡∏ö‡∏ï‡∏±‡∏ß ‡∏ñ‡∏π‡∏Å‡∏Å‡∏•‡∏±‡πà‡∏ô‡πÅ‡∏Å‡∏•‡πâ‡∏á‡∏à‡∏≤‡∏Å‡∏®‡∏±‡∏ï‡∏£‡∏π‡πÄ‡∏Å‡πà‡∏≤ ‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏Ñ‡πâ‡∏ô‡πÉ‡∏à‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß ‡∏ï‡πâ‡∏≠‡∏á‡∏¢‡πâ‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏®‡∏±‡∏¢‡∏ó‡∏±‡πâ‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô`,
    "1-2": `‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏û‡∏ö‡πÄ‡∏à‡∏≠‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡∏£‡πà‡∏ß‡∏°‡πÉ‡∏ä‡πâ‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏±‡∏ô ‡∏ó‡∏±‡πâ‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏ó‡∏≤‡∏á‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏£‡πà‡∏ß‡∏°‡∏°‡∏∑‡∏≠ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏∏‡πâ‡∏ô‡∏™‡πà‡∏ß‡∏ô ‡∏°‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏•‡∏≤‡∏†‡∏à‡∏≤‡∏Å‡πÄ‡∏û‡∏®‡∏ï‡∏£‡∏á‡∏Ç‡πâ‡∏≤‡∏° ‡∏£‡∏ß‡∏°‡πÑ‡∏õ‡∏ñ‡∏∂‡∏á‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏ï‡πà‡∏á‡∏á‡∏≤‡∏ô`,
    "1-3": `‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏è‡∏¥‡∏õ‡∏±‡∏Å‡∏©‡πå ‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô ‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏†‡∏≤‡∏£‡∏∞ ‡∏Å‡∏µ‡∏î‡∏Å‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏Ç‡∏±‡∏î‡∏Ç‡∏ß‡∏≤‡∏á‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡πÄ‡∏Å‡∏¥‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏Ñ‡∏î‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏° ‡∏Å‡∏≤‡∏£‡∏ñ‡∏π‡∏Å‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Ñ‡∏î‡∏µ ‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏ß‡∏∞‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏≠‡∏≤‡∏à‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡πÑ‡∏î‡πâ ‡∏ñ‡∏π‡∏Å‡∏Ç‡∏π‡πà‡πÄ‡∏Ç‡πá‡∏ç‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÉ‡∏´‡πâ‡∏à‡∏≥‡∏¢‡∏≠‡∏°`,
    "1-4": `‡∏™‡πà‡∏á‡∏ú‡∏•‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏¥‡∏î‡∏£‡∏¥‡πÄ‡∏£‡∏¥‡πà‡∏° ‡πÅ‡∏•‡∏∞‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡∏™‡∏¥‡πà‡∏á‡πÉ‡∏´‡∏°‡πà ‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏°‡∏ï‡∏£‡∏µ ‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡∏Å‡∏°‡∏¥‡∏ï‡∏£ ‡πÅ‡∏•‡∏∞‡∏´‡∏≤‡∏ú‡∏π‡πâ‡∏£‡πà‡∏ß‡∏°‡∏≠‡∏∏‡∏î‡∏°‡∏Å‡∏≤‡∏£‡∏ì‡πå ‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏õ‡∏£‡∏∞‡∏™‡∏≤‡∏ô‡∏á‡∏≤‡∏ô ‡∏™‡πà‡∏á‡∏ú‡∏•‡∏î‡∏µ‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡∏°‡πà`,
    "1-5": `‡∏ú‡∏π‡∏Å‡∏û‡∏±‡∏ô‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÄ‡∏Å‡∏∑‡πâ‡∏≠‡∏Å‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏´‡∏ç‡πà ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏∏‡∏õ‡∏ñ‡∏±‡∏°‡∏†‡πå‡∏Ñ‡πâ‡∏≥‡∏à‡∏∏‡∏ô ‡∏°‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÄ‡∏Ç‡πâ‡∏≤‡∏û‡∏ö‡∏ç‡∏≤‡∏ï‡∏¥ ‡∏ú‡∏π‡πâ‡πÉ‡∏´‡∏ç‡πà ‡∏ú‡∏π‡πâ‡∏°‡∏µ‡∏≠‡∏≥‡∏ô‡∏≤‡∏à‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠ ‡πÅ‡∏ï‡πà‡∏à‡∏∞‡πÄ‡∏Å‡∏¥‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÉ‡∏ô‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏ô‡πÉ‡∏Å‡∏•‡πâ‡∏ä‡∏¥‡∏î ‡∏ß‡∏≤‡∏á‡πÉ‡∏à‡∏°‡∏≤‡∏Å‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏`,
    "1-6": `‡∏°‡∏±‡∏Å‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡πÇ‡∏≠‡∏Å‡∏≤‡∏™ ‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏ô‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ ‡∏°‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡πÑ‡∏Å‡∏•‡πÅ‡∏•‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡∏¢‡πà‡∏≠‡∏á ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏™‡∏µ‡∏¢‡∏á ‡∏¢‡∏±‡∏á‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏ú‡∏•‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏ö‡πà‡∏á ‡∏Å‡∏≤‡∏£‡∏£‡∏¥‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà ‡∏°‡∏±‡∏Å‡∏°‡∏≤‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤`,
    "1-7": `‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏à‡∏∞‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡πâ‡∏≠‡∏ô ‡∏Å‡∏£‡∏∞‡∏ß‡∏ô‡∏Å‡∏£‡∏∞‡∏ß‡∏≤‡∏¢ ‡πÑ‡∏Ç‡∏ß‡πà‡∏Ñ‡∏ß‡πâ‡∏≤‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ê‡∏≤‡∏ô‡∏∞ ‡∏û‡∏∂‡∏á‡∏£‡∏∞‡∏ß‡∏±‡∏á‡∏Ñ‡∏π‡πà‡∏°‡∏¥‡∏ï‡∏£‡∏à‡∏∞‡∏Å‡∏•‡∏≤‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡∏®‡∏±‡∏ï‡∏£‡∏π ‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ‡πÅ‡∏•‡∏∞‡∏î‡∏¥‡πâ‡∏ô‡∏£‡∏ô ‡πÅ‡∏ï‡πà‡∏à‡∏∞‡πÄ‡∏à‡∏≠‡∏≠‡∏∏‡∏õ‡∏™‡∏£‡∏£‡∏Ñ‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏ó‡∏≤‡∏á ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏•‡πà‡∏≤‡∏ä‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏≠‡πÄ‡∏ß‡∏•‡∏≤ ‡∏°‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÄ‡∏à‡πá‡∏ö‡∏õ‡πà‡∏ß‡∏¢‡∏Ç‡∏±‡πâ‡∏ô‡∏£‡∏∏‡∏ô‡πÅ‡∏£‡∏á`,
    "2-1": `‡∏û‡∏ö‡πÄ‡∏à‡∏≠‡∏Ñ‡∏π‡πà‡∏´‡∏π‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ä‡∏∞‡∏ï‡∏≤ ‡∏´‡∏£‡∏∑‡∏≠‡∏ñ‡∏π‡∏Å‡∏´‡∏•‡∏≠‡∏Å‡πÉ‡∏´‡πâ‡∏Å‡∏£‡∏∞‡∏ó‡∏≥ ‡∏£‡∏∞‡∏ß‡∏±‡∏á‡∏ñ‡∏π‡∏Å‡∏≠‡∏¥‡∏à‡∏â‡∏≤‡∏£‡∏¥‡∏©‡∏¢‡∏≤ ‡∏ñ‡∏π‡∏Å‡∏´‡∏•‡∏≠‡∏Å‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡πâ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏™‡∏∏‡∏à‡∏£‡∏¥‡∏ï`,
    "2-2": `‡∏°‡∏±‡∏Å‡πÄ‡∏à‡∏≠‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏ô‡∏±‡∏î ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î ‡∏ú‡∏π‡πâ‡∏≠‡∏∑‡πà‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ù‡πà‡∏≤‡∏¢‡∏Å‡∏£‡∏∞‡∏ó‡∏≥‡πÄ‡∏£‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡∏ú‡∏• ‡πÉ‡∏ô‡∏î‡∏ß‡∏á‡∏ú‡∏π‡πâ‡∏°‡∏µ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß‡∏°‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏ó‡∏≤‡∏¢‡∏≤‡∏ó`,
    "2-3": `‡∏ñ‡∏π‡∏Å‡πÄ‡∏û‡πà‡∏á‡πÄ‡∏•‡πá‡∏á‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏¥‡∏©‡∏¢‡∏≤ ‡∏°‡∏±‡∏Å‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡πÄ‡∏ä‡∏¥‡∏á‡∏ä‡∏π‡πâ‡∏™‡∏≤‡∏ß ‡∏£‡∏∞‡∏ß‡∏±‡∏á‡∏ñ‡∏π‡∏Å‡πÉ‡∏™‡πà‡∏£‡πâ‡∏≤‡∏¢‡∏à‡∏≤‡∏Å‡∏Ñ‡∏ô‡πÉ‡∏Å‡∏•‡πâ‡∏ï‡∏±‡∏ß ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏±‡∏î‡πÅ‡∏¢‡πâ‡∏á‡πÉ‡∏ô‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏°‡πà‡πÄ‡∏ó‡πà‡∏≤‡πÄ‡∏ó‡∏µ‡∏¢‡∏°`,
    "2-4": `‡∏°‡∏¥‡∏ï‡∏£‡πÉ‡∏´‡πâ‡∏Å‡∏≤‡∏£‡∏≠‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡∏∞ ‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏à‡∏≤‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô ‡∏°‡∏µ‡∏Ñ‡∏ô‡∏õ‡∏Å‡∏õ‡πâ‡∏≠‡∏á‡∏≠‡∏≠‡∏Å‡∏´‡∏ô‡πâ‡∏≤ ‡∏ä‡πà‡∏ß‡∏¢‡πÅ‡∏ö‡∏Å‡∏£‡∏±‡∏ö‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÉ‡∏´‡πâ ‡∏Å‡∏≤‡∏£‡∏á‡∏≤‡∏ô/‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡πÄ‡∏´‡∏ï‡∏∏‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô`,
    "2-5": `‡∏Å‡∏≤‡∏£‡∏≠‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡∏∞‡∏ó‡∏µ‡πà‡∏ï‡∏¥‡∏î‡∏Ñ‡πâ‡∏≤‡∏á‡∏ö‡∏∏‡∏ç‡∏Ñ‡∏∏‡∏ì ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏´‡∏ç‡πà‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å‡∏°‡∏≤‡∏Å‡πà‡∏≠‡∏ô ‡πÅ‡∏ï‡πà‡∏à‡∏∞‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡∏±‡∏ö‡∏ö‡∏£‡∏¥‡∏ß‡∏≤‡∏£ ‡πÇ‡∏î‡∏¢‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Å‡∏≤‡∏£‡∏≠‡πâ‡∏≤‡∏á‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ö‡∏∏‡∏ç‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏Å‡πà‡∏≤ ‡∏ñ‡∏π‡∏Å‡∏ó‡∏ß‡∏á‡∏ö‡∏∏‡∏ç‡∏Ñ‡∏∏‡∏ì`,
    "2-6": `‡∏™‡∏°‡∏õ‡∏£‡∏≤‡∏£‡∏ñ‡∏ô‡∏≤‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÅ‡∏£‡∏Å‡∏û‡∏ö ‡∏°‡∏µ‡πÄ‡∏™‡∏ô‡πà‡∏´‡πå‡∏ï‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏û‡∏ö‡πÄ‡∏´‡πá‡∏ô ‡∏≠‡∏≤‡∏à‡∏û‡∏ö‡∏Ñ‡∏ô‡∏£‡∏±‡∏Å‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÉ‡∏à‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß ‡πÅ‡∏ï‡πà‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏≠‡∏≤‡∏à‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡πÑ‡∏î‡πâ‡∏£‡∏ß‡∏î‡πÄ‡∏£‡πá‡∏ß ‡∏ñ‡∏π‡∏Å‡∏™‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏á‡∏≤‡∏ô`,
    "2-7": `‡∏ó‡∏≠‡∏î‡∏ó‡∏¥‡πâ‡∏á‡∏†‡∏≤‡∏£‡∏∞ ‡∏™‡πà‡∏á‡∏ú‡∏•‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏¢‡πâ‡∏≤‡∏¢‡∏á‡∏≤‡∏ô/‡∏¢‡πâ‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà ‡∏ï‡∏±‡∏î‡∏†‡∏≤‡∏£‡∏∞‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï ‡∏û‡πà‡∏≠‡πÅ‡∏°‡πà‡∏•‡∏π‡∏Å‡∏≠‡∏¢‡∏π‡πà‡∏´‡πà‡∏≤‡∏á‡πÑ‡∏Å‡∏•`,
    "3-1": `‡∏ñ‡∏π‡∏Å‡∏Ç‡∏±‡∏ö‡πÑ‡∏•‡πà ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÉ‡∏´‡πâ‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏†‡∏≤‡∏û ‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô ‡∏Å‡∏µ‡∏î‡∏Å‡∏±‡∏ô ‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏ ‡∏ú‡∏π‡πâ‡πÉ‡∏´‡∏ç‡πà‡∏Å‡∏•‡∏±‡πà‡∏ô‡πÅ‡∏Å‡∏•‡πâ‡∏á ‡πÄ‡∏™‡∏µ‡∏¢‡∏ú‡∏•‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå`,
    "3-2": `‡∏ñ‡∏π‡∏Å‡∏ä‡∏±‡∏Å‡∏ä‡∏ß‡∏ô‡πÉ‡∏´‡πâ‡∏Ñ‡∏•‡πâ‡∏≠‡∏¢‡∏ï‡∏≤‡∏° ‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÄ‡∏õ‡πá‡∏ô‡∏°‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏° ‡∏ñ‡∏π‡∏Å‡∏Ñ‡∏ô‡πÉ‡∏Å‡∏•‡πâ‡∏ä‡∏¥‡∏î‡∏´‡∏±‡∏Å‡∏´‡∏•‡∏±‡∏á ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡πÉ‡∏™‡πà‡∏£‡πâ‡∏≤‡∏¢ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤`,
    "3-3": `‡∏•‡∏∏‡πà‡∏°‡∏´‡∏•‡∏á‡∏ó‡∏∞‡∏ô‡∏á‡∏ï‡∏ô‡πÄ‡∏Å‡∏¥‡∏ô‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì ‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡πÇ‡∏Å‡∏•‡∏≤‡∏´‡∏• ‡∏î‡∏¥‡πâ‡∏ô‡∏£‡∏ô ‡πÉ‡∏ä‡πâ‡∏≠‡∏≤‡∏£‡∏°‡∏ì‡πå‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à ‡∏ó‡∏≥‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î ‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏Ñ‡∏î‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï`,
    "3-4": `‡∏Å‡∏£‡∏∞‡∏ó‡∏≥‡∏ú‡∏¥‡∏î‡πÅ‡∏•‡∏∞‡∏ó‡∏¥‡πâ‡∏á‡∏†‡∏≤‡∏£‡∏∞‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡∏≠‡∏∑‡πà‡∏ô ‡∏´‡∏∏‡πâ‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏±‡∏î‡πÅ‡∏¢‡πâ‡∏á ‡∏ñ‡∏π‡∏Å‡∏Å‡∏î‡∏î‡∏±‡∏ô‡πÉ‡∏´‡πâ‡∏à‡∏≥‡∏¢‡∏≠‡∏° ‡πÅ‡∏ï‡πà‡∏°‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÑ‡∏î‡πâ‡∏á‡∏≤‡∏ô‡∏û‡∏¥‡πÄ‡∏®‡∏© ‡∏ï‡πâ‡∏≠‡∏á‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡πÉ‡∏´‡πâ‡∏£‡∏±‡∏î‡∏Å‡∏∏‡∏°`,
    "3-5": `‡πÄ‡∏Å‡∏¥‡∏î‡∏Ñ‡∏î‡∏µ ‡∏ü‡πâ‡∏≠‡∏á‡∏£‡πâ‡∏≠‡∏á ‡∏´‡∏£‡∏∑‡∏≠‡∏ñ‡∏π‡∏Å‡∏ü‡πâ‡∏≠‡∏á ‡∏ñ‡∏π‡∏Å‡πÄ‡∏û‡πà‡∏á‡πÄ‡∏•‡πá‡∏á‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏´‡∏ç‡πà ‡πÅ‡∏ï‡πà‡∏°‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï‡πÉ‡∏ô‡∏á‡∏≤‡∏ô ‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏≠‡∏ö‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô ‡∏ä‡∏¥‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á`,
    "3-6": `‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡∏°‡∏µ‡∏≠‡∏≥‡∏ô‡∏≤‡∏à ‡πÅ‡∏ï‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏∞‡∏•‡∏π‡∏Å‡∏ô‡πâ‡∏≠‡∏á ‡∏£‡∏∞‡∏ß‡∏±‡∏á‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏•‡∏±‡∏ö‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏°‡∏µ‡∏Ñ‡∏π‡πà ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏≠‡∏≤‡∏à‡∏ñ‡∏π‡∏Å‡πÄ‡∏õ‡∏¥‡∏î‡πÇ‡∏õ‡∏á`,
    "3-7": `‡∏ñ‡∏π‡∏Å‡πÄ‡∏û‡πà‡∏á‡πÄ‡∏•‡πá‡∏á ‡∏®‡∏±‡∏ï‡∏£‡∏π‡πÉ‡∏´‡πâ‡πÇ‡∏ó‡∏© ‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏ ‡πÅ‡∏ï‡∏Å‡∏´‡∏±‡∏Å ‡∏™‡∏π‡∏ç‡πÄ‡∏™‡∏µ‡∏¢‡∏Ñ‡∏ô‡πÉ‡∏ô‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß ‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏ñ‡∏π‡∏Å‡∏¢‡∏∂‡∏î‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå/‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏™‡∏±‡∏ç‡∏ç‡∏≤ ‡∏Ñ‡∏π‡πà‡πÅ‡∏Ç‡πà‡∏á‡∏°‡∏≤‡πÅ‡∏¢‡πà‡∏á‡∏ä‡∏¥‡∏á`,
    "4-1": `‡∏™‡∏£‡∏£‡∏´‡∏≤‡∏ß‡πà‡∏≤‡∏à‡πâ‡∏≤‡∏á ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ ‡πÄ‡∏à‡∏£‡∏à‡∏≤‡∏™‡∏±‡∏ç‡∏ç‡∏≤ ‡πÅ‡∏ï‡πà‡∏£‡∏∞‡∏ß‡∏±‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏±‡∏ö‡∏£‡∏±‡πà‡∏ß‡πÑ‡∏´‡∏• ‡∏Ç‡πà‡∏≤‡∏ß‡∏•‡∏ß‡∏á ‡∏Ñ‡∏î‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏û‡∏≤‡∏î‡∏û‡∏¥‡∏á`,
    "4-2": `‡∏ñ‡∏π‡∏Å‡∏ú‡∏•‡∏±‡∏Å‡∏†‡∏≤‡∏£‡∏∞‡∏°‡∏≤‡πÉ‡∏´‡πâ‡πÅ‡∏Å‡πà‡∏ï‡∏ô ‡πÑ‡∏î‡πâ‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô ‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á/‡∏¢‡πâ‡∏≤‡∏¢‡∏á‡∏≤‡∏ô ‡∏°‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏û‡∏ö‡∏£‡∏±‡∏Å‡πÄ‡∏û‡∏®‡∏ï‡∏£‡∏á‡∏Ç‡πâ‡∏≤‡∏° ‡πÅ‡∏ï‡πà‡∏≠‡∏≤‡∏à‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏±‡∏Å‡∏ã‡πâ‡∏≠‡∏ô`,
    "4-3": `‡πÄ‡∏Å‡∏¥‡∏î‡∏°‡∏µ‡∏Ñ‡∏ô‡∏´‡∏°‡∏±‡πà‡∏ô‡πÑ‡∏™‡πâ ‡∏õ‡∏£‡∏¥‡∏ß‡∏¥‡∏ï‡∏Å ‡πÇ‡∏Å‡∏´‡∏Å‡πÉ‡∏™‡πà‡∏Ñ‡∏ß‡∏≤‡∏° ‡∏Ç‡∏±‡∏î‡πÅ‡∏¢‡πâ‡∏á‡∏´‡∏∏‡πâ‡∏ô‡∏™‡πà‡∏ß‡∏ô ‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏°‡∏≠‡∏á ‡∏Ñ‡∏ß‡∏£‡∏£‡∏∞‡∏ß‡∏±‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏∞‡πÄ‡∏•‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏Ñ‡∏π‡πà‡∏Ñ‡∏£‡∏≠‡∏á`,
    "4-4": `‡πÑ‡∏î‡πâ‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏°‡∏≤‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏≠‡∏á ‡∏°‡∏µ‡∏≠‡∏≥‡∏ô‡∏≤‡∏à‡∏î‡∏π‡πÅ‡∏•‡πÉ‡∏ô‡∏ó‡πâ‡∏≠‡∏á‡∏ñ‡∏¥‡πà‡∏ô ‡∏Å‡∏≤‡∏£‡∏á‡∏≤‡∏ô‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á ‡πÅ‡∏ï‡πà‡∏°‡∏µ‡∏Ñ‡∏ô‡∏£‡∏≠‡∏ö‡∏ï‡∏±‡∏ß‡∏ä‡∏¥‡∏á‡∏î‡∏µ‡∏ä‡∏¥‡∏á‡πÄ‡∏î‡πà‡∏ô ‡∏ï‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ô‡∏Å‡∏•‡∏≤‡∏á`,
    "4-5": `‡∏ß‡∏¥‡πà‡∏á‡πÄ‡∏ï‡πâ‡∏ô ‡∏£‡πâ‡∏≠‡∏á‡∏Ç‡∏≠ ‡∏ï‡∏¥‡∏î‡∏≠‡∏≤‡∏°‡∏¥‡∏™‡∏™‡∏¥‡∏ô‡∏à‡πâ‡∏≤‡∏á ‡∏Å‡∏≤‡∏£‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏ô‡∏ó‡∏≤‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ú‡∏¢ ‡∏û‡∏ö‡∏£‡∏±‡∏Å‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡πÑ‡∏Å‡∏• ‡∏£‡∏∞‡∏ß‡∏±‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏´‡∏ç‡πà‡∏ù‡πà‡∏≤‡∏¢‡∏Ñ‡∏π‡πà‡∏°‡∏≤‡∏Å‡πâ‡∏≤‡∏ß‡∏Å‡πà‡∏≤‡∏¢`,
    "4-6": `‡∏ñ‡∏π‡∏Å‡∏õ‡∏≠‡∏á‡∏£‡πâ‡∏≤‡∏¢‡∏à‡∏≤‡∏Å‡∏Ñ‡∏ô‡∏≠‡∏∑‡πà‡∏ô ‡πÄ‡∏™‡∏µ‡∏¢‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå ‡∏Ç‡∏±‡∏î‡πÅ‡∏¢‡πâ‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏´‡∏ç‡πà‡πÉ‡∏ô‡∏ö‡πâ‡∏≤‡∏ô ‡πÄ‡∏Å‡πá‡∏ö‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡πÑ‡∏°‡πà‡∏Ñ‡∏á‡∏ó‡∏ô ‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏ñ‡∏π‡∏Å‡∏¢‡∏±‡∏Å‡∏¢‡∏≠‡∏Å/‡∏•‡∏±‡∏Å‡∏Ç‡πÇ‡∏°‡∏¢ ‡πÅ‡∏ï‡∏Å‡πÅ‡∏¢‡∏Å‡πÉ‡∏ô‡∏´‡∏°‡∏π‡πà‡∏Ñ‡∏ì‡∏∞`,
    "4-7": `‡πÄ‡∏Å‡∏¥‡∏î‡πÇ‡∏£‡∏Ñ‡∏†‡∏±‡∏¢ ‡πÑ‡∏Ç‡πâ‡πÄ‡∏à‡πá‡∏ö ‡πÄ‡∏™‡∏µ‡∏¢‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏à‡∏≤‡∏Å‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏≠‡∏∑‡πà‡∏ô ‡∏≠‡∏≥‡∏ô‡∏≤‡∏à‡πÉ‡∏ô‡∏£‡∏≤‡∏ä‡∏Å‡∏≤‡∏£‡πÅ‡∏ï‡πà‡∏Ç‡∏±‡∏î‡πÅ‡∏¢‡πâ‡∏á‡πÉ‡∏ô‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß ‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡πÄ‡∏à‡πá‡∏ö‡∏õ‡πà‡∏ß‡∏¢‡∏â‡∏±‡∏ö‡∏û‡∏•‡∏±‡∏ô‡∏£‡∏∏‡∏ô‡πÅ‡∏£‡∏á`,
    "5-1": `‡∏°‡∏µ‡∏•‡∏≤‡∏†‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏´‡∏ç‡πà‡∏Ñ‡∏ô‡πÉ‡∏Å‡∏•‡πâ‡∏ï‡∏±‡∏ß ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏´‡∏≤‡∏ú‡∏π‡πâ‡∏£‡πà‡∏ß‡∏°‡πÅ‡∏ô‡∏ß ‡∏£‡∏¥‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡∏°‡πà ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏û‡∏ö‡∏£‡∏±‡∏Å‡πÅ‡∏•‡∏∞‡∏ï‡∏Å‡∏•‡∏á‡∏õ‡∏•‡∏á‡πÉ‡∏à`,
    "5-2": `‡∏°‡∏±‡∏Å‡∏û‡∏ö‡πÄ‡∏à‡∏≠‡∏Ñ‡∏π‡πà ‡πÅ‡∏ï‡πà‡∏ö‡∏£‡∏¥‡∏ß‡∏≤‡∏£‡∏ï‡∏µ‡∏ï‡∏±‡∏ß‡∏≠‡∏≠‡∏Å‡∏´‡πà‡∏≤‡∏á ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡πà‡∏ô‡∏≠‡∏∏‡∏ó‡∏ò‡∏£‡∏ì‡πå/‡∏é‡∏µ‡∏Å‡∏≤ ‡∏ú‡∏π‡πâ‡πÉ‡∏´‡∏ç‡πà‡∏ù‡πà‡∏≤‡∏¢‡∏Ñ‡∏π‡πà‡∏Å‡πâ‡∏≤‡∏ß‡∏Å‡πà‡∏≤‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå`,
    "5-3": `‡∏°‡∏µ‡∏Ñ‡∏î‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏ù‡πà‡∏≤‡∏¢‡∏ü‡πâ‡∏≠‡∏á ‡∏™‡πà‡∏á‡∏ú‡∏•‡∏î‡∏µ‡∏ï‡πà‡∏≠‡∏£‡∏≤‡∏ä‡∏Å‡∏≤‡∏£/‡∏á‡∏≤‡∏ô‡∏£‡∏±‡∏ê ‡∏°‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ñ‡∏π‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏Ç‡πâ‡∏≤‡∏ó‡∏≥‡∏á‡∏≤‡∏ô`,
    "5-4": `‡∏Ñ‡∏ô‡πÉ‡∏Å‡∏•‡πâ‡πÄ‡∏≠‡∏≤‡πÉ‡∏à‡∏´‡πà‡∏≤‡∏á ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÑ‡∏°‡πà‡∏≠‡∏≤‡∏à‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ ‡πÄ‡∏Å‡∏¥‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ô‡∏£‡∏±‡∏Å ‡∏ú‡∏π‡πâ‡πÉ‡∏´‡∏ç‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏´‡∏ï‡∏∏ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏±‡∏ö‡∏ñ‡∏π‡∏Å‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ú‡∏¢`,
    "5-5": `‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏´‡∏ç‡πà‡πÅ‡∏ï‡πà‡∏°‡∏µ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç ‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏†‡∏≤‡∏¢‡πÉ‡∏ï‡πâ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏° ‡πÅ‡∏•‡∏Å‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ú‡∏•‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå ‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏™‡πà‡∏á‡∏ú‡∏•‡∏î‡∏µ`,
    "5-6": `‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏´‡∏ç‡πà‡∏ú‡∏•‡∏±‡∏Å‡∏î‡∏±‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏á ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏ô‡πâ‡∏≥‡πÉ‡∏à‡∏ï‡∏≠‡∏ö‡πÅ‡∏ó‡∏ô ‡∏á‡∏≤‡∏ô/‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥ ‡πÅ‡∏ï‡πà‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏£‡∏±‡∏Å‡πÑ‡∏°‡πà‡∏î‡∏µ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Å‡∏≤‡∏£‡∏õ‡∏Å‡∏õ‡∏¥‡∏î`,
    "5-7": `‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏à‡∏≤‡∏Å‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏™‡∏π‡πà‡∏≠‡∏µ‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ ‡πÄ‡∏ä‡πà‡∏ô ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á/‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó ‡πÅ‡∏ï‡πà‡∏¢‡∏±‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏†‡∏≤‡∏¢‡πÉ‡∏ï‡πâ‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏´‡∏ç‡πà‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏´‡∏∏‡πà‡∏ô‡πÄ‡∏ä‡∏¥‡∏î`,
    "6-1": `‡∏à‡∏∞‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö ‡∏ñ‡∏π‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏£‡πâ‡∏≠‡∏á ‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô‡πÅ‡∏¢‡πà‡∏á‡∏ä‡∏¥‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å ‡∏ï‡πà‡∏≤‡∏á‡∏Ñ‡∏ô‡∏ï‡πà‡∏≤‡∏á‡∏ñ‡∏∑‡∏≠‡∏î‡∏µ ‡∏Ç‡∏±‡∏î‡πÅ‡∏¢‡πâ‡∏á‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏´‡∏ç‡πà‡πÉ‡∏ô‡∏á‡∏≤‡∏ô`,
    "6-2": `‡∏û‡∏ö‡πÄ‡∏à‡∏≠‡∏Ñ‡∏ô‡∏ñ‡∏π‡∏Å‡πÉ‡∏à‡∏à‡∏≤‡∏Å‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏° ‡∏£‡∏±‡∏Å‡πÅ‡∏£‡∏Å‡∏û‡∏ö ‡πÅ‡∏ï‡πà‡∏ñ‡∏π‡∏Å‡∏Å‡∏µ‡∏î‡∏Å‡∏±‡∏ô‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ê‡∏≤‡∏ô‡∏∞/‡πÄ‡∏ä‡∏∑‡πâ‡∏≠‡∏ä‡∏≤‡∏ï‡∏¥ ‡∏≠‡∏≤‡∏à‡∏û‡∏ö‡∏£‡∏±‡∏Å‡∏ï‡πà‡∏≤‡∏á‡∏ñ‡∏¥‡πà‡∏ô‡∏ï‡πà‡∏≤‡∏á‡∏ä‡∏≤‡∏ï‡∏¥ ‡∏ö‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ô‡∏≠‡∏Å‡πÉ‡∏à‡πÅ‡∏ö‡∏ö‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£`,
    "6-3": `‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á ‡πÇ‡∏¢‡∏Å‡∏¢‡πâ‡∏≤‡∏¢ ‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏†‡∏±‡∏¢ ‡πÑ‡∏õ‡∏ï‡πà‡∏≤‡∏á‡πÅ‡∏î‡∏ô/‡∏¢‡πâ‡∏≤‡∏¢‡∏ñ‡∏¥‡πà‡∏ô ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏∏‡∏Ç ‡∏ñ‡∏π‡∏Å‡∏Å‡πà‡∏≠‡∏Å‡∏ß‡∏ô ‡∏†‡∏≤‡∏£‡∏∞‡∏á‡∏≤‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏ó‡∏±‡∏ô‡∏ï‡∏±‡πâ‡∏á‡∏ï‡∏±‡∏ß`,
    "6-4": `‡∏ñ‡∏π‡∏Å‡∏Å‡∏î‡∏î‡∏±‡∏ô‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏≠‡∏¥‡∏™‡∏£‡∏∞‡∏†‡∏≤‡∏û ‡πÄ‡∏à‡∏£‡∏à‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏±‡∏ç‡∏ç‡∏≤ ‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏ñ‡∏π‡∏Å‡πÅ‡∏¢‡πà‡∏á‡∏ä‡∏¥‡∏á‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏¥‡∏ô/‡∏¢‡∏∂‡∏î‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå`,
    "6-5": `‡∏Ç‡∏±‡∏î‡πÅ‡∏¢‡πâ‡∏á‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ô‡πÉ‡∏Å‡∏•‡πâ‡∏ï‡∏±‡∏ß‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏ú‡∏π‡πâ‡πÉ‡∏´‡∏ç‡πà‡∏Å‡∏±‡∏Å‡∏Å‡∏±‡∏ô ‡∏ß‡∏¥‡πà‡∏á‡πÄ‡∏ï‡πâ‡∏ô‡∏Ç‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠ ‡πÑ‡∏î‡πâ‡∏≠‡∏∏‡∏õ‡∏ñ‡∏±‡∏°‡∏†‡πå ‡πÅ‡∏ï‡πà‡∏Ñ‡∏π‡πà‡∏£‡∏±‡∏Å‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ ‡∏ñ‡∏π‡∏Å‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡∏™‡∏±‡∏°‡∏ú‡∏±‡∏™‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏¢ ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏≠‡∏ö‡∏ã‡πà‡∏≠‡∏ô`,
    "6-6": `‡∏°‡∏µ‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥ ‡πÑ‡∏î‡πâ‡∏°‡∏£‡∏î‡∏Å ‡∏™‡∏≠‡∏ö‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô‡∏ú‡πà‡∏≤‡∏ô ‡∏°‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏™‡∏π‡∏á ‡πÅ‡∏ï‡πà‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ ‡∏£‡∏±‡∏Å‡πÑ‡∏Å‡∏•‡∏ï‡∏±‡∏ß`,
    "6-7": `‡∏ñ‡∏π‡∏Å‡πÉ‡∏™‡πà‡∏Ñ‡∏ß‡∏≤‡∏° ‡∏Å‡∏µ‡∏î‡∏Å‡∏±‡∏ô ‡πÅ‡∏ö‡πà‡∏á‡πÅ‡∏¢‡∏Å ‡πÇ‡∏¢‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏¥‡∏î‡∏°‡∏≤‡πÉ‡∏´‡πâ ‡∏ö‡∏£‡∏¥‡∏ß‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏ï‡πâ‡∏≤‡∏ô ‡∏Ñ‡∏ô‡∏£‡∏±‡∏Å‡∏ï‡∏µ‡∏ï‡∏±‡∏ß‡∏≠‡∏≠‡∏Å‡∏´‡πà‡∏≤‡∏á`,
    "7-1": `‡∏Ñ‡∏ô‡πÉ‡∏Å‡∏•‡πâ‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏≤‡πÉ‡∏à‡∏´‡πà‡∏≤‡∏á ‡πÄ‡∏´‡∏ô‡πá‡∏î‡πÄ‡∏´‡∏ô‡∏∑‡πà‡∏≠‡∏¢ ‡∏£‡πâ‡∏≠‡∏ô‡πÉ‡∏à ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡πâ‡∏≤‡∏ß‡∏´‡∏ô‡πâ‡∏≤‡∏ä‡πâ‡∏≤ ‡∏ñ‡∏π‡∏Å‡∏°‡∏≠‡∏á‡∏Ç‡πâ‡∏≤‡∏°‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏≠‡∏¥‡∏™‡∏£‡∏∞‡∏†‡∏≤‡∏û ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏ß‡∏≤‡∏î‡∏£‡∏∞‡πÅ‡∏ß‡∏á`,
    "7-2": `‡∏û‡∏•‡∏±‡∏î‡∏û‡∏£‡∏≤‡∏Å‡∏™‡∏π‡∏ç‡πÄ‡∏™‡∏µ‡∏¢ ‡∏Ñ‡∏ô‡πÉ‡∏Å‡∏•‡πâ‡∏ä‡∏¥‡∏î‡∏ï‡∏µ‡∏ï‡∏±‡∏ß‡∏≠‡∏≠‡∏Å‡∏´‡πà‡∏≤‡∏á ‡πÇ‡∏£‡∏Ñ‡∏†‡∏±‡∏¢‡πÄ‡∏ö‡∏µ‡∏¢‡∏î‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô ‡∏î‡πâ‡∏≤‡∏ô‡∏î‡∏µ‡∏≠‡∏≤‡∏à‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏°‡∏≠‡∏ö‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÅ‡∏ó‡∏ô/‡∏™‡∏∑‡∏ö‡∏ó‡∏≠‡∏î‡∏°‡∏£‡∏î‡∏Å`,
    "7-3": `‡∏ñ‡∏π‡∏Å‡∏Å‡∏µ‡∏î‡∏Å‡∏±‡∏ô‡∏Ç‡∏±‡∏î‡∏Ç‡∏ß‡∏≤‡∏á ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏≠‡∏¥‡∏™‡∏£‡∏∞ ‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡∏≠‡∏≥‡∏ô‡∏≤‡∏à‡∏Ç‡πà‡∏°‡πÄ‡∏´‡∏á ‡∏£‡∏±‡∏á‡πÅ‡∏Å ‡∏®‡∏±‡∏ï‡∏£‡∏π‡πÄ‡∏Å‡πà‡∏≤‡∏£‡∏≤‡∏ß‡∏µ`,
    "7-4": `‡∏ñ‡∏π‡∏Å‡πÅ‡∏ó‡∏£‡∏Å‡πÅ‡∏ã‡∏á‡∏à‡∏≤‡∏Å‡∏°‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏° ‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏£‡∏±‡∏Å‡∏ã‡πâ‡∏≠‡∏ô ‡∏¢‡πâ‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏ò‡∏£‡∏£‡∏° ‡∏†‡∏≤‡∏£‡∏∞‡∏á‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏á‡∏Ñ‡∏≤ ‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏ö‡πà‡∏á‡∏ó‡∏≥‡∏´‡∏•‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô`,
    "7-5": `‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏™‡∏π‡πà‡∏™‡∏¥‡πà‡∏á‡πÉ‡∏´‡∏°‡πà ‡∏Å‡∏≤‡∏£‡∏®‡∏±‡∏•‡∏¢‡∏Å‡∏£‡∏£‡∏°/‡∏û‡∏±‡∏í‡∏ô‡∏≤ ‡πÅ‡∏ï‡πà‡∏£‡∏∞‡∏ß‡∏±‡∏á‡∏Ñ‡∏ô‡πÄ‡∏™‡πÅ‡∏™‡∏£‡πâ‡∏á‡πÄ‡∏≠‡∏≤‡πÉ‡∏à‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ú‡∏•‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå ‡∏Å‡∏≤‡∏£‡∏´‡∏•‡∏≠‡∏Å‡∏•‡∏ß‡∏á`,
    "7-6": `‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡∏ñ‡∏π‡∏Å‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò ‡∏†‡∏≤‡∏£‡∏∞‡∏´‡∏ô‡∏µ‡πâ‡∏™‡∏¥‡∏ô ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡πÅ‡∏ö‡∏ö‡∏à‡∏≥‡πÉ‡∏à ‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏°‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏° ‡∏ü‡πâ‡∏≠‡∏á‡∏£‡πâ‡∏≠‡∏á‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•`,
    "7-7": `‡∏ö‡∏£‡∏¥‡∏ß‡∏≤‡∏£‡∏´‡∏±‡∏Å‡∏´‡∏•‡∏±‡∏á‡∏ó‡∏£‡∏¢‡∏® ‡∏°‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏¥‡∏ô‡πÉ‡∏´‡∏ç‡πà ‡∏™‡∏≠‡∏ö‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô‡∏ó‡πâ‡∏≠‡∏á‡∏ñ‡∏¥‡πà‡∏ô ‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏î‡πâ ‡πÅ‡∏ï‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏∞‡∏ß‡∏±‡∏á‡∏Å‡∏≤‡∏£‡∏Å‡∏•‡∏±‡πà‡∏ô‡πÅ‡∏Å‡∏•‡πâ‡∏á‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏°‡∏≤‡∏Å‡πà‡∏≠‡∏ô`,
  };

  function cardinal4(deg) {
    const cards = ["N", "E", "S", "W"];
    const d = ((deg % 360) + 360) % 360;
    const idx = Math.round(d / 90) % 4; // nearest cardinal
    return cards[idx];
  }

  function deltaToNearestCardinal(deg) {
    const d = ((deg % 360) + 360) % 360;
    const nearestBase = Math.round(d / 90) * 90; // may be 360
    const base = nearestBase % 360;
    let diff = d - base;
    if (diff > 180) diff -= 360;
    if (diff < -180) diff += 360;
    return Math.abs(diff); // 0..45 ideally
  }

  // Big section mapping per requirement:
  // [0,45):6, [45,90):1, [90,135):2, [135,180):3, [180,225):4, [225,270):7, [270,315):5, [315,360):8
  function bigLabelForDegree(deg) {
    const d = ((deg % 360) + 360) % 360;
    if (d < 45) return 6;
    if (d < 90) return 1;
    if (d < 135) return 2;
    if (d < 180) return 3;
    if (d < 225) return 4;
    if (d < 270) return 7;
    if (d < 315) return 5;
    return 8;
  }

  // Determine the sub-label (‡πÅ‡∏ó‡∏£‡∏Å) for a given degree using the sequence
  // starting from the big section label.
  function smallLabelForDegree(deg) {
    const seq = [6, 1, 2, 3, 4, 7, 5, 8];
    const d = ((deg % 360) + 360) % 360;
    const bigIndex = Math.floor(d / 45); // 0..7 sectors
    const within = d - bigIndex * 45; // 0..45
    const subIndex = Math.min(7, Math.floor(within / (45 / 8))); // 0..7
    const startLabel = seq[bigIndex];
    const startIdx = seq.indexOf(startLabel);
    const lbl = seq[(startIdx + subIndex) % 8];
    return lbl;
  }

  // Draw the dial
  useEffect(() => {
    const canvas = canvasRef.current;
    if (!canvas) return;

    const dpr = window.devicePixelRatio || 1;
    canvas.width = Math.round(size * dpr);
    canvas.height = Math.round(size * dpr);
    canvas.style.width = `${size}px`;
    canvas.style.height = `${size}px`;

    const ctx = canvas.getContext("2d");
    if (!ctx) return;

    ctx.reset?.();
    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);

    // Background (theme)
    ctx.fillStyle = t.bg;
    ctx.fillRect(0, 0, size, size);

    const cx = size / 2;
    const cy = size / 2;
    // Responsive geometry (slightly larger dial for readability)
    // We draw up to ~64px beyond the outer ring (cardinals) + tick/arrow slack
    const outerFeatureExtent = 64; // px
    const pad = Math.max(outerFeatureExtent, Math.min(size * 0.12, 120));
    const outerR = Math.min(cx, cy) - pad;
    const ringWidth = Math.max(32, Math.min(size * 0.30, 220));
    const innerR = Math.max(outerR - ringWidth, 60);

    // Rotate dial opposite to heading (like a real compass card)
    const rot = (heading * Math.PI) / 180;
    const dialRot = -rot;
    const startAngle = -Math.PI / 2 + dialRot;
    const slice = (Math.PI * 2) / SEGMENTS;

    const minorStroke = t.minor;
    const majorStroke = t.major;

    // Draw segment borders and bold lines every 8 slices
    for (let i = 0; i < SEGMENTS; i++) {
      const a0 = startAngle + i * slice;
      const a1 = a0 + slice;

      // radial line at a0
      ctx.beginPath();
      ctx.moveTo(cx + innerR * Math.cos(a0), cy + innerR * Math.sin(a0));
      ctx.lineTo(cx + outerR * Math.cos(a0), cy + outerR * Math.sin(a0));
      ctx.lineWidth = 1;
      ctx.strokeStyle = minorStroke;
      ctx.stroke();

      if (i % 8 === 0) {
        ctx.beginPath();
        ctx.moveTo(cx + innerR * Math.cos(a0), cy + innerR * Math.sin(a0));
        ctx.lineTo(cx + outerR * Math.cos(a0), cy + outerR * Math.sin(a0));
        ctx.lineWidth = 3;
        ctx.strokeStyle = majorStroke;
        ctx.stroke();
      }
    }

    // Cleaner outer ticks for readability
    const smallScreen = size < 480;
    for (let deg = 0; deg < 360; deg += 5) {
      // Keep outer ticks/labels fixed relative to the screen (not rotating with heading)
      const angle = (deg - 90) * (Math.PI / 180);
      const tickBase = outerR + 10;
      const tickLen = deg % 30 === 0 ? 26 : deg % 10 === 0 ? 16 : 8;
      const tickTop = outerR + tickLen;
      ctx.beginPath();
      ctx.moveTo(cx + tickBase * Math.cos(angle), cy + tickBase * Math.sin(angle));
      ctx.lineTo(cx + tickTop * Math.cos(angle), cy + tickTop * Math.sin(angle));
      ctx.lineWidth = deg % 30 === 0 ? 3 : 1;
      ctx.strokeStyle = deg % 30 === 0 ? t.tickMaj : t.tickMin;
      ctx.stroke();

      if (!smallScreen && deg % 30 === 0) {
        const labelR = outerR + 36;
        const lx = cx + labelR * Math.cos(angle);
        const ly = cy + labelR * Math.sin(angle);
        ctx.save();
        ctx.translate(lx, ly);
        ctx.rotate(0); // keep labels upright for mobile readability
        ctx.fillStyle = t.text;
        ctx.font = "13px ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto";
        ctx.textAlign = "center";
        ctx.textBaseline = "middle";
        ctx.fillText(String(deg), 0, 0);
        ctx.restore();
      }
    }

    // Outer/inner rings
    ctx.beginPath();
    ctx.arc(cx, cy, outerR, 0, Math.PI * 2);
    ctx.lineWidth = 2;
    ctx.strokeStyle = majorStroke;
    ctx.stroke();
    // Outline glow (watch theme)
    if (theme === 'watch') {
      ctx.save();
      ctx.shadowBlur = 18;
      ctx.shadowColor = t.outline;
      ctx.strokeStyle = t.outline;
      ctx.lineWidth = 3;
      ctx.stroke();
      ctx.restore();
    }

    // Aspects ring (‡∏ö‡∏£‡∏¥‡∏ß‡∏≤‡∏£/‡∏≠‡∏≤‡∏¢‡∏∏/‡πÄ‡∏î‡∏ä/‡∏®‡∏£‡∏µ/‡∏°‡∏π‡∏•‡∏∞/‡∏≠‡∏∏‡∏ï‡∏™‡∏≤‡∏´‡∏∞/‡∏°‡∏ô‡∏ï‡∏£‡∏µ/‡∏Å‡∏≤‡∏•‡∏µ) placed per sector starting from user's birth number
    if (showAspects && birthNum) {
      const aspects = ["‡∏ö‡∏£‡∏¥‡∏ß‡∏≤‡∏£", "‡∏≠‡∏≤‡∏¢‡∏∏", "‡πÄ‡∏î‡∏ä", "‡∏®‡∏£‡∏µ", "‡∏°‡∏π‡∏•‡∏∞", "‡∏≠‡∏∏‡∏ï‡∏™‡∏≤‡∏´‡∏∞", "‡∏°‡∏ô‡∏ï‡∏£‡∏µ", "‡∏Å‡∏≤‡∏•‡∏µ"]; // clockwise
      // ‡πÉ‡∏´‡πâ "‡∏ö‡∏£‡∏¥‡∏ß‡∏≤‡∏£" ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ó‡∏µ‡πà section ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏î‡∏≤‡∏ß‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î‡πÄ‡∏™‡∏°‡∏≠.
      // ‡πÉ‡∏ä‡πâ mapping ‡∏î‡∏≤‡∏ß‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î -> ‡πÄ‡∏•‡∏Ç‡πÉ‡∏´‡∏ç‡πà‡∏Ç‡∏≠‡∏á section
      // 1..7 (‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå..‡πÄ‡∏™‡∏≤‡∏£‡πå) map to bigLabels index where bigLabels = [6,1,2,3,4,7,5,8]
      // ‡∏´‡∏≤‡∏ß‡πà‡∏≤‡πÄ‡∏•‡∏Ç‡πÉ‡∏´‡∏ç‡πà‡πÉ‡∏î‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö birthNum ‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏ä‡πâ‡∏≠‡∏¥‡∏ô‡πÄ‡∏î‡πá‡∏Å‡∏ã‡πå‡∏ô‡∏±‡πâ‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏∏‡∏î‡πÄ‡∏£‡∏¥‡πà‡∏°
      const bigLabelsArr = [6, 1, 2, 3, 4, 7, 5, 8];
      let birthSection = 0;
      for (let i = 0; i < 8; i++) if (bigLabelsArr[i] === birthNum) { birthSection = i; break; }
      const ringR = outerR + 46; // outside the dial but inside tick labels
      ctx.font = "600 13px ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto";
      ctx.fillStyle = t.sub; // theme sub text
      ctx.textAlign = "center";
      ctx.textBaseline = "middle";
      for (let s = 0; s < 8; s++) {
        const label = aspects[s];
        const sectorIndex = (birthSection + s) % 8; // sector relative to birth day
        const a = (sectorIndex * 45 - 90) * (Math.PI / 180) + dialRot + (45 * Math.PI / 180) / 2; // center of sector
        const x = cx + ringR * Math.cos(a);
        const y = cy + ringR * Math.sin(a);
        ctx.save();
        ctx.translate(x, y);
        ctx.rotate(0);
        ctx.fillText(label, 0, 0);
        ctx.restore();
      }
    }

    ctx.beginPath();
    ctx.arc(cx, cy, innerR, 0, Math.PI * 2);
    ctx.lineWidth = 2;
    ctx.strokeStyle = majorStroke;
    ctx.stroke();

    // Sub‚Äëlabel track (soft background to improve legibility over radial lines)
    const ringWidthPx = outerR - innerR;
    // keep sub labels inside safely away from inner circle
    const subTrackOuter = Math.max(innerR + 20, outerR - 20);
    const subTrackInner = Math.max(innerR + 16, subTrackOuter - 28);
    ctx.beginPath();
    ctx.arc(cx, cy, subTrackOuter, 0, Math.PI * 2);
    ctx.arc(cx, cy, subTrackInner, 0, Math.PI * 2, true);
    ctx.fillStyle = t.trackBg;
    ctx.fill();

    // Big section labels (rotate with dial). Mapping order clockwise
    const bigSlice = slice * (SEGMENTS / 8);
    ctx.textAlign = "center";
    ctx.textBaseline = "middle";
    ctx.fillStyle = majorStroke;
    ctx.font = "600 28px ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto";
    const bigLabels = [6, 1, 2, 3, 4, 7, 5, 8];
    if (showBig) {
      for (let b = 0; b < 8; b++) {
        const a0 = startAngle + b * bigSlice;
        const amid = a0 + bigSlice / 2;
        const r = (outerR + innerR) / 2;
        const x = cx + r * Math.cos(amid);
        const y = cy + r * Math.sin(amid);
        ctx.fillText(String(bigLabels[b]), x, y);
      }
    }

    // Sub‚Äëlabels inside each big section (8 per section)
    const seq = [6, 1, 2, 3, 4, 7, 5, 8];
    const subR = (subTrackInner + subTrackOuter) / 2; // near outer ring
    const subFontPx = Math.max(13, Math.min(18, Math.round(size * 0.04)));
    ctx.fillStyle = t.sub; // theme sub labels
    ctx.font = `600 ${subFontPx}px ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto`;
    ctx.textAlign = "center";
    ctx.textBaseline = "middle";
    if (showSmall) {
      for (let b = 0; b < 8; b++) {
        const sectionStartAngle = startAngle + b * bigSlice;
        const sectionLabel = seq[b];
        const startIdx = seq.indexOf(sectionLabel);
        for (let j = 0; j < 8; j++) {
          const label = seq[(startIdx + j) % 8];
          const mid = sectionStartAngle + (j + 0.5) * slice; // clockwise inside section
          const lx = cx + subR * Math.cos(mid);
          const ly = cy + subR * Math.sin(mid);
          // Keep numbers upright for readability
          ctx.save();
          ctx.translate(lx, ly);
          ctx.rotate(-dialRot); // keep sub labels upright even as dial rotates
          ctx.fillText(String(label), 0, 0);
          ctx.restore();
        }
      }
    }

    // Determine current big/small labels at the top index (12 o'clock)
    const wrapPi2 = (a) => {
      let x = a % (Math.PI * 2);
      if (x < -Math.PI) x += Math.PI * 2;
      if (x > Math.PI) x -= Math.PI * 2;
      return x;
    };
    const angDist = (a, b) => Math.abs(wrapPi2(a - b));
    const topAngle = -Math.PI / 2;

    let currentBigIndex = 0;
    let best = Infinity;
    for (let b = 0; b < 8; b++) {
      const mid = startAngle + b * bigSlice + bigSlice / 2;
      const d = angDist(mid, topAngle);
      if (d < best) {
        best = d;
        currentBigIndex = b;
      }
    }
    const currentBigLabel = bigLabels[currentBigIndex];

    let currentSmallIndex = 0;
    best = Infinity;
    for (let j = 0; j < 8; j++) {
      const mid = startAngle + currentBigIndex * bigSlice + j * slice + slice / 2;
      const d = angDist(mid, topAngle);
      if (d < best) {
        best = d;
        currentSmallIndex = j;
      }
    }
    const startIdx = seq.indexOf(currentBigLabel);
    const currentSmallLabel = seq[(startIdx + currentSmallIndex) % 8];

    // expose for DOM meaning box
    if (currentBig !== currentBigLabel) setCurrentBig(currentBigLabel);
    if (currentSmall !== currentSmallLabel) setCurrentSmall(currentSmallLabel);

    // Cardinal letters (rotate with dial)
    const cardinals = [
      { t: "N", d: 0 },
      { t: "E", d: 90 },
      { t: "S", d: 180 },
      { t: "W", d: 270 },
    ];
    ctx.font = "bold 22px ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto";
    ctx.fillStyle = t.text;
    for (const c of cardinals) {
      const a = (c.d - 90) * (Math.PI / 180) + dialRot;
      const r = outerR + (smallScreen ? 56 : 68);
      const x = cx + r * Math.cos(a);
      const y = cy + r * Math.sin(a);
      ctx.fillText(c.t, x, y);
    }

    // Fixed top index marker (triangle at 12 o'clock)
    const top = -Math.PI / 2;
    const r0 = outerR + 22;
    const r1 = outerR + 8;
    const ax = cx + r0 * Math.cos(top);
    const ay = cy + r0 * Math.sin(top);
    const bx = cx + r1 * Math.cos(top + 0.08);
    const by = cy + r1 * Math.sin(top + 0.08);
    const cxp = cx + r1 * Math.cos(top - 0.08);
    const cyp = cy + r1 * Math.sin(top - 0.08);
    ctx.beginPath();
    ctx.moveTo(ax, ay);
    ctx.lineTo(bx, by);
    ctx.lineTo(cxp, cyp);
    ctx.closePath();
    ctx.fillStyle = t.accent;
    ctx.fill();

    // Center readout: show heading + description (big/small labels)
    const card = cardinal4(heading);
    // Use the label at the TOP index (12 o'clock) so it matches what the user faces
    const bigLbl = currentBigLabel;
    const smallLbl = currentSmallLabel;
    ctx.fillStyle = t.text;
    ctx.textAlign = "center";
    ctx.textBaseline = "middle";
    ctx.font = `700 ${Math.round(size * 0.08)}px ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto`;
    ctx.fillText(`${Math.round(normalize(heading) ?? 0)}¬∞`, cx, cy - Math.max(12, size * 0.012));
    ctx.font = `700 ${Math.round(size * 0.04)}px ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto`;
    ctx.fillText(card, cx, cy + Math.max(6, size * 0.004));
    ctx.font = `600 ${Math.round(size * 0.03)}px ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto`;
    ctx.fillText(`(${bigLbl} ‡πÄ‡∏™‡∏ß‡∏¢ ${smallLbl} ‡πÅ‡∏ó‡∏£‡∏Å)`, cx, cy + Math.max(28, size * 0.04));

  }, [size, heading, showBig, showSmall, showAspects, theme, birthNum]);

  const topBarStyle = {
    position: "fixed",
    top: 12,
    left: "50%",
    transform: "translateX(-50%)",
    zIndex: 10,
    display: "flex",
    alignItems: "center",
    gap: 8,
    background: "rgba(255,255,255,0.85)",
    backdropFilter: "blur(6px)",
    border: "1px solid #e2e8f0",
    borderRadius: 9999,
    padding: "8px 12px",
    boxShadow: "0 1px 2px rgba(0,0,0,.08)",
    fontFamily: "system-ui, -apple-system, Segoe UI, Roboto, sans-serif",
  };

  const enableBtnStyle = {
    position: "fixed",
    bottom: "max(16px, env(safe-area-inset-bottom))",
    left: "50%",
    transform: "translateX(-50%)",
    zIndex: 20,
    padding: "14px 18px",
    borderRadius: 12,
    background: "#0f172a",
    color: "#fff",
    border: "1px solid #0f172a",
    fontSize: 16,
    fontWeight: 600,
    boxShadow: "0 6px 20px rgba(15,23,42,.25)",
  };

  return (
    <div style={{ minHeight: "100vh", display: "grid", placeItems: "center", background: t.page, userSelect: "none" }}>
      {/* Top status bar */}
      <div style={{...topBarStyle, background: t.topbarBg, border: `1px solid ${t.topbarBorder}`, width: "min(95vw, 720px)", flexWrap: "wrap", justifyContent: "space-between"}}>
        <div style={{ display: "flex", alignItems: "center", gap: 8, flexWrap: "wrap" }}>
          <span style={{ color: t.muted, fontSize: 14 }}>‡πÄ‡∏Ç‡πá‡∏°‡∏ó‡∏¥‡∏®‡∏ä‡∏±‡∏¢‡∏†‡∏π‡∏°‡∏¥‡∏û‡∏£‡∏∞‡∏£‡πà‡∏ß‡∏á</span>
          {userName && birthNum && (
            <span style={{ color: t.text, fontSize: 12 }}>
              ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ: {userName} ‚Ä¢ ‡πÄ‡∏Å‡∏¥‡∏î‡∏ß‡∏±‡∏ô {birthDayName(birthNum)}
            </span>
          )}
        </div>
        <div style={{ display: "flex", alignItems: "center", gap: 8, flexWrap: "wrap" }}>
          <button onClick={()=>setShowBig(!showBig)} style={{ padding: "4px 8px", borderRadius: 8, border: `1px solid ${t.topbarBorder}`, background: showBig ? t.buttonBg : t.page, color: showBig ? t.buttonText : t.muted, fontSize: 12, fontWeight: 700 }}>‡πÄ‡∏™‡∏ß‡∏¢</button>
          <button onClick={()=>setShowSmall(!showSmall)} style={{ padding: "4px 8px", borderRadius: 8, border: `1px solid ${t.topbarBorder}`, background: showSmall ? t.buttonBg : t.page, color: showSmall ? t.buttonText : t.muted, fontSize: 12, fontWeight: 700 }}>‡πÅ‡∏ó‡∏£‡∏Å</button>
          <button onClick={()=>setShowAspects(!showAspects)} style={{ padding: "4px 8px", borderRadius: 8, border: `1px solid ${t.topbarBorder}`, background: showAspects ? t.buttonBg : t.page, color: showAspects ? t.buttonText : t.muted, fontSize: 12, fontWeight: 700 }}>‡∏ö‡∏£‡∏¥‡∏ß‡∏≤‡∏£/‡∏≠‡∏≤‡∏¢‡∏∏/‡πÄ‡∏î‡∏ä/‡∏®‡∏£‡∏µ</button>
          {/* removed offset field per request */}
          <select value={theme} onChange={(e)=>setTheme(e.target.value)} style={{ padding: "4px 8px", borderRadius: 8, border: `1px solid ${t.topbarBorder}`, background: t.page, color: t.text, fontSize: 12 }}>
            <option value="noon">Noon</option>
            <option value="dark">Dark</option>
            <option value="red">Red night</option>
            <option value="watch">Watch Night</option>
          </select>
        </div>
        <span style={{ fontSize: 14, fontWeight: 600, color: t.text }}>{heading.toFixed(2)}¬∞</span>
      </div>

      {/* Canvas */}
      <canvas ref={canvasRef} />

      {/* Meaning panel pinned under the dial, never overlapping */}
      <div style={{
        position: "fixed",
        left: "50%",
        transform: "translateX(-50%)",
        bottom: "max(16px, env(safe-area-inset-bottom))",
        width: "min(95vw, 720px)",
        zIndex: 5,
        background: t.overlayBg,
        border: `1px solid ${t.overlayBorder}`,
        borderRadius: 12,
        boxShadow: theme === 'noon' ? "0 8px 18px rgba(0,0,0,.08)" : "none",
        padding: 12,
        textAlign: "center",
        fontFamily: "system-ui, -apple-system, Segoe UI, Roboto, sans-serif",
        color: t.text,
      }}>
        <div style={{ color: t.muted, fontWeight: 600, fontSize: 13 }}>
          {(place || (lat!=null&&lon!=null) || altitudeM!=null) && (
            <span>
              {place ? place + " ‚Ä¢ " : ""}
              {lat!=null&&lon!=null ? formatLatLon(lat, lon) + " ‚Ä¢ " : ""}
              {altitudeM!=null ? `${altitudeM} m` : ""}
            </span>
          )}
        </div>
        {sensorStatus === "active" && currentBig!=null && currentSmall!=null && (
          <div style={{ marginTop: 6 }}>
            {(() => {
              const key = `${currentBig}-${currentSmall}`;
              const meaning = MEANINGS[key];
              const { icon, label, moodIcon } = inferContextAndMood(meaning || "");
              return (
                <div>
                  <div style={{ fontWeight: 700, fontSize: 16 }}>{icon} {label} {moodIcon || ""}</div>
                  <div style={{ marginTop: 6, lineHeight: 1.4, whiteSpace: "pre-wrap", fontSize: 14 }}>{meaning || ""}</div>
                </div>
              );
            })()}
          </div>
        )}
      </div>

      {/* Bottom enable button for iOS permission UX */}
      {sensorStatus !== "active" && (
        <button onClick={onEnable} style={enableBtnStyle}>‡∏Å‡∏î‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏Ç‡πá‡∏°‡∏ó‡∏¥‡∏®</button>
      )}

      {showIntro && (
        <div style={{ position: "fixed", inset: 0, background: "rgba(0,0,0,0.4)", display: "grid", placeItems: "center", zIndex: 50 }}>
          <div style={{ background: "#fff", borderRadius: 14, padding: 16, width: "min(92vw, 420px)", boxShadow: "0 10px 30px rgba(0,0,0,.2)", fontFamily: "system-ui, -apple-system, Segoe UI, Roboto, sans-serif", color: "#0f172a" }}>
            <div style={{ fontWeight: 700, fontSize: 18, marginBottom: 12 }}>‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</div>
            <div style={{ display: "grid", gap: 10 }}>
              <label style={{ fontSize: 14 }}>
                ‡∏ä‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
                <input value={userName} onChange={(e)=>setUserName(e.target.value)} placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏™‡∏£‡∏≤" style={{ width: "100%", marginTop: 6, padding: "8px 10px", borderRadius: 8, border: "1px solid #cbd5e1" }} />
              </label>
              <label style={{ fontSize: 14 }}>
                ‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏Å‡∏¥‡∏î‡∏ß‡∏±‡∏ô‡∏≠‡∏∞‡πÑ‡∏£
                <select value={birthNum ?? ''} onChange={(e)=>setBirthNum(Number(e.target.value)||null)} style={{ width: "100%", marginTop: 6, padding: "8px 10px", borderRadius: 8, border: "1px solid #cbd5e1" }}>
                  <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î</option>
                  <option value="1">‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå (1)</option>
                  <option value="2">‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå (2)</option>
                  <option value="3">‡∏≠‡∏±‡∏á‡∏Ñ‡∏≤‡∏£ (3)</option>
                  <option value="4">‡∏û‡∏∏‡∏ò (4)</option>
                  <option value="5">‡∏û‡∏§‡∏´‡∏±‡∏™‡∏ö‡∏î‡∏µ (5)</option>
                  <option value="6">‡∏®‡∏∏‡∏Å‡∏£‡πå (6)</option>
                  <option value="7">‡πÄ‡∏™‡∏≤‡∏£‡πå (7)</option>
                </select>
              </label>
              <button onClick={()=>{ try{ localStorage.setItem("userName", userName||""); if (birthNum) localStorage.setItem("birthNum", String(birthNum)); }catch{} setShowIntro(false); }} style={{ marginTop: 8, padding: "10px 14px", borderRadius: 10, background: "#0f172a", color: "#fff", border: "1px solid #0f172a", fontWeight: 700 }}>‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</button>
            </div>
          </div>
        </div>
      )}
    </div>
  );
}
